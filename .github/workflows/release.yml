name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
    
    - name: Run tests
      run: bun test
    
    - name: Build project
      run: bun run build
    
    - name: Extract version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
    
    - name: Determine npm tag
      id: npm_tag
      run: |
        VERSION="${{ steps.get_version.outputs.version }}"
        if [[ $VERSION =~ -alpha ]]; then
          echo "tag=alpha" >> $GITHUB_OUTPUT
        elif [[ $VERSION =~ -beta ]]; then
          echo "tag=beta" >> $GITHUB_OUTPUT
        elif [[ $VERSION =~ -rc ]]; then
          echo "tag=rc" >> $GITHUB_OUTPUT
        else
          echo "tag=latest" >> $GITHUB_OUTPUT
        fi
        echo "NPM tag: $(cat $GITHUB_OUTPUT | grep tag=)"
    
    - name: Setup Node.js for npm publishing
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Publish to npm
      run: |
        npm publish --tag ${{ steps.npm_tag.outputs.tag }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.version }}
        body: |
          ## Changes in ${{ steps.get_version.outputs.version }}
          
          ### Features
          - Support for multiple law citations with §§ pattern
          - Comprehensive citation extraction and parsing
          - Built-in text cleaning utilities
          - Citation annotation and resolution
          
          ### Installation
          ```bash
          npm install @beshkenadze/eyecite-js@${{ steps.npm_tag.outputs.tag }}
          ```
          
          ### Documentation
          See the [README](https://github.com/beshkenadze/eyecite-js#readme) for usage examples and API documentation.
        draft: false
        prerelease: ${{ steps.npm_tag.outputs.tag != 'latest' }}
    
    - name: Upload build artifacts to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/index.js
        asset_name: eyecite-js-${{ steps.get_version.outputs.version }}.js
        asset_content_type: application/javascript