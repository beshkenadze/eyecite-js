name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
    
    - name: Run tests
      run: bun test
    
    - name: Build project
      run: bun run build
    
    - name: Extract version from tag and package name
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        # Extract package name from package.json
        PACKAGE_NAME=$(jq -r '.name' package.json)
        echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
        echo "Package name: $PACKAGE_NAME"
    
    - name: Determine npm tag
      id: npm_tag
      run: |
        VERSION="${{ steps.get_version.outputs.version }}"
        if [[ $VERSION =~ -alpha ]]; then
          TAG="alpha"
        elif [[ $VERSION =~ -beta ]]; then
          TAG="beta"
        elif [[ $VERSION =~ -rc ]]; then
          TAG="rc"
        else
          TAG="latest"
        fi
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "NPM tag: $TAG"
    
    - name: Setup Node.js for npm publishing
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Publish to npm
      run: |
        npm publish --tag ${{ steps.npm_tag.outputs.tag }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Setup Node.js for GitHub Packages
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://npm.pkg.github.com'
        scope: '@beshkenadze'
    
    - name: Publish to GitHub Packages
      run: |
        npm publish --tag ${{ steps.npm_tag.outputs.tag }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      if: github.ref_type == 'tag'
      with:
        name: Release ${{ steps.get_version.outputs.version }}
        body: |
          ## ${{ steps.get_version.outputs.package_name }} v${{ steps.get_version.outputs.version }}
          
          This is an automated release. Please check the commit history for detailed changes.
          
          ### Installation
          
          **From npm:**
          ```bash
          npm install ${{ steps.get_version.outputs.package_name }}@${{ steps.get_version.outputs.version }}
          # or
          bun add ${{ steps.get_version.outputs.package_name }}@${{ steps.get_version.outputs.version }}
          ```
          
          **From GitHub Packages:**
          ```bash
          npm install ${{ steps.get_version.outputs.package_name }}@${{ steps.get_version.outputs.version }} --registry=https://npm.pkg.github.com
          # or
          bun add ${{ steps.get_version.outputs.package_name }}@${{ steps.get_version.outputs.version }} --registry=https://npm.pkg.github.com
          ```
          
          ### Documentation
          See the [README](https://github.com/beshkenadze/eyecite-js#readme) for usage examples and API documentation.
        draft: false
        prerelease: ${{ steps.npm_tag.outputs.tag != 'latest' }}
        files: |
          dist/index.js
          dist/index.cjs
          dist/index.d.ts
          package.json
          README.md