name: Pull Request

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
    
    - name: Run linter
      run: bun run lint
    
    - name: Run type checking
      run: bun run typecheck
    
    - name: Run tests
      run: bun test
    
    - name: Build project
      run: bun run build
    
    - name: Check for breaking changes
      run: |
        # This is a placeholder for API compatibility checks
        echo "Checking for breaking changes..."
        # You could add tools like api-extractor or custom scripts here
    
    - name: Comment on PR
      uses: actions/github-script@v7
      if: github.event.action == 'opened'
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'üöÄ Thanks for the PR! The CI checks are running. Once they pass, this PR will be ready for review.'
          })

  size-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
    
    - name: Build project
      run: bun run build
    
    - name: Check bundle size
      run: |
        echo "Checking bundle sizes..."
        du -h dist/index.js
        du -h dist/index.cjs
        
        # Set size limits (in KB)
        MAX_SIZE_KB=3000
        
        ESM_SIZE=$(du -k dist/index.js | cut -f1)
        CJS_SIZE=$(du -k dist/index.cjs | cut -f1)
        
        echo "ESM bundle size: ${ESM_SIZE}KB"
        echo "CJS bundle size: ${CJS_SIZE}KB"
        echo "Size limit: ${MAX_SIZE_KB}KB"
        
        if [ $ESM_SIZE -gt $MAX_SIZE_KB ]; then
          echo "‚ùå ESM bundle size exceeds limit!"
          exit 1
        fi
        
        if [ $CJS_SIZE -gt $MAX_SIZE_KB ]; then
          echo "‚ùå CJS bundle size exceeds limit!"
          exit 1
        fi
        
        echo "‚úÖ Bundle sizes are within limits"